---
import "../styles/global.css";
import Logo from "./Logo.astro";
import "@fontsource/acme";
---

<header
  id="LandingHeader"
  class=" py-6 px-10 flex items-center fixed top-0 w-full justify-between text-white z-40"
>
  <div class="flex flex-grow basis-0">
    <Logo />
  </div>


  <!--* Nav 1 -->
  <nav>
    <ul
      class="flex text-sm [&>li>a]:transition-color [&>li>a]:duration-300 [&>li>a]:text-xl [&>li>a]:inline-block [&>li>a]:px-4 [&>li>a]:py-2 "
    >
      <li><a href="#">Model X</a></li>
      <li><a href="#">Model Y</a></li>
      <li><a href="#">Model Z</a></li>
    </ul>
  </nav>


  <!--* Nav 2 -->
  <nav class="flex flex-grow justify-end basis-0">
    <ul
      class="flex text-sm [&>li>a]:transition-color [&>li>a]:duration-300 [&>li>a]:text-xl [&>li>a]:inline-block [&>li>a]:px-4 [&>li>a]:py-2"
    >
      <li><a href="#">Soporte</a></li>
      <li><a href="#">Tienda</a></li>
      <li><a href="#">Cuenta</a></li>
      <li><a href="#">Menu</a></li>
    </ul>
  </nav>

  <div
    id ="menu-backdrop"
    class={`absolute bg-black/5 backdrop-blur-lg rounded
     translate-x-[var(--left)] translate-y-[var(--top)]
     left-0 top-0
     w-[var(--width)] h-[var(--height)]
     transition-all duration-300 ease-in-out opacity-0 -z-10`}
  ></div>

</header>

<script>
  const ListItems = document.querySelectorAll("#LandingHeader li");
  const menuBackdrop = document.getElementById("menu-backdrop") as HTMLElement;

  ListItems.forEach((item) => {
    item.addEventListener("mouseenter", () => {
      const { left, top, width, height } = item.getBoundingClientRect();
      menuBackdrop.style.setProperty("--left", `${left}px`);
      menuBackdrop.style.setProperty("--top", `${top}px`);
      menuBackdrop.style.setProperty("--width", `${width}px`);
      menuBackdrop.style.setProperty("--height", `${height}px`);
      menuBackdrop.style.opacity = "1";
      menuBackdrop.style.visibility = "visible";
    });

    item.addEventListener("mouseleave", () => {
      menuBackdrop.style.opacity = "0";
      menuBackdrop.style.visibility = "hidden";
    });
  });
</script>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const header = document.getElementById("LandingHeader");

    if (!header) return;

    const observerOptions = {
      root: null,
      rootMargin: "0px",
      threshold: 0.5,
    };

    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          const color = entry.target.getAttribute("data-header-color");
          if (color) header.style.color = color;
        }
      });
    }, observerOptions);

    // Ejemplo: observar una secciÃ³n con data-header-color
    document.querySelectorAll("[data-header-color]").forEach((el) => {
      observer.observe(el);
    });
  });
</script>
